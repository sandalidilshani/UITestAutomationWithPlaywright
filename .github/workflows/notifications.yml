name: Test Notifications

on:
  workflow_run:
    workflows: ["Playwright E2E Tests"]
    types: [completed]
  workflow_dispatch:
    inputs:
      notification_type:
        description: 'Type of notification to send'
        required: true
        default: 'summary'
        type: choice
        options:
        - summary
        - test-results
        - failure-alert

env:
  SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
  TEAMS_WEBHOOK_URL: ${{ secrets.TEAMS_WEBHOOK_URL }}

jobs:
  # Test failure notifications
  notify-test-failure:
    name: Notify Test Failures
    runs-on: ubuntu-latest
    if: ${{ github.event.workflow_run.conclusion == 'failure' && github.event.workflow_run.name == 'Playwright E2E Tests' }}
    timeout-minutes: 10
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Download test artifacts
        uses: actions/download-artifact@v4
        with:
          path: test-artifacts
          pattern: playwright-failures-*

      - name: Generate failure report
        run: |
          echo "# Test Failure Report" > failure-report.md
          echo "**Workflow:** ${{ github.event.workflow_run.name }}" >> failure-report.md
          echo "**Branch:** ${{ github.event.workflow_run.head_branch }}" >> failure-report.md
          echo "**Commit:** ${{ github.event.workflow_run.head_sha }}" >> failure-report.md
          echo "**Failed at:** $(date)" >> failure-report.md
          echo "**Workflow URL:** ${{ github.event.workflow_run.html_url }}" >> failure-report.md
          echo "" >> failure-report.md
          echo "## Failed Tests" >> failure-report.md
          if [ -d "test-artifacts" ]; then
            find test-artifacts -name "*.png" -o -name "*.webm" | head -10 | while read file; do
              echo "- $(basename "$file")" >> failure-report.md
            done
          else
            echo "No failure artifacts found" >> failure-report.md
          fi

      - name: Send Slack notification
        if: env.SLACK_WEBHOOK_URL != ''
        run: |
          curl -X POST -H 'Content-type: application/json' \
            --data "{\"text\":\"‚ùå Playwright tests failed\nBranch: ${{ github.event.workflow_run.head_branch }}\nURL: ${{ github.event.workflow_run.html_url }}\"}" \
            $SLACK_WEBHOOK_URL

      - name: Send Teams notification
        if: env.TEAMS_WEBHOOK_URL != ''
        run: |
          curl -X POST -H 'Content-type: application/json' \
            --data "{\"text\":\"‚ùå Playwright tests failed\nBranch: ${{ github.event.workflow_run.head_branch }}\nURL: ${{ github.event.workflow_run.html_url }}\"}" \
            $TEAMS_WEBHOOK_URL

      - name: Upload failure report
        uses: actions/upload-artifact@v4
        with:
          name: failure-report-${{ github.event.workflow_run.id }}
          path: failure-report.md
          retention-days: 30

  # Test success notifications
  notify-test-success:
    name: Notify Test Success
    runs-on: ubuntu-latest
    if: ${{ github.event.workflow_run.conclusion == 'success' && github.event.workflow_run.name == 'Playwright E2E Tests' }}
    timeout-minutes: 5
    
    steps:
      - name: Send success notification
        run: |
          echo "‚úÖ Playwright tests passed successfully"
          echo "Branch: ${{ github.event.workflow_run.head_branch }}"
          echo "URL: ${{ github.event.workflow_run.html_url }}"

  # Custom notification based on input
  custom-notification:
    name: Custom Notification
    runs-on: ubuntu-latest
    if: github.event_name == 'workflow_dispatch'
    timeout-minutes: 10
    
    steps:
      - name: Send custom notification
        run: |
          case "${{ github.event.inputs.notification_type }}" in
            "test-results")
              echo "üìã Sending test results notification"
              ;;
            "failure-alert")
              echo "üö® Sending failure alert notification"
              ;;
            *)
              echo "üìä Sending summary notification"
              ;;
          esac
